FROM resin/%%RESIN_MACHINE_NAME%%-debian

#FROM resin/%%RESIN_MACHINE_NAME%%-buildpack-deps:jessie

# Enable systemd init system in container
ENV INITSYSTEM on

# Defines our working directory in container
WORKDIR /usr/src/app

RUN echo "deb http://security.debian.org/debian-security jessie/updates main" >> /etc/apt/sources.list

# install dependencies
RUN apt-get update && \
    apt-get install -y \
    wget \
    nginx \
    unzip \
    oracle-java8-jdk \
    sharutils \
    tzdata \
    gawk \
    libc-ares2 \
    libarchive-dev \
    libavahi-compat-libdnssd-dev \
    && rm -rf /var/lib/apt/lists/*

# Add the nginx configuration file
ADD nginx/nginx.conf /etc/nginx/nginx.conf
ADD nginx/default /etc/nginx/sites-available/default

# copy over the servers (*for better caching)
COPY zway-conf/z-way-server-RaspberryPiXTools-v2.3.0.tgz ./
COPY zway-conf/webif_raspberry.tar.gz ./
COPY zway-conf/mongoose.pkg.rPi.tgz ./

# extract the servers
RUN tar zxvf z-way-server-RaspberryPiXTools-v2.3.0.tgz -C /opt/
RUN tar zxvf webif_raspberry.tar.gz -C /
RUN tar zxvf mongoose.pkg.rPi.tgz -C /

# copy over custom zway module for sending data to our server
COPY modules/EventForwarder /opt/z-way-server/automation/userModules/EventForwarder

# copy over CUSTOM install script, this is different than the stock zway install,
# I removed commands that interubt the terminal and phoning home logic
COPY zway-conf/zway_install.sh ./

# adds zway
RUN cat zway_install.sh | sudo bash

# This will copy all files in our root to the working  directory in the container
COPY . ./

# make the start stript executable
RUN chmod +x start.sh
# run the start script, anything that deals with /data has to be run in the start script becasue
# /data is mounted after the docker file has run and when the server is starting 
CMD ["./start.sh"]